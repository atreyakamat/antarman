---
import Layout from '../layouts/HomeLayout.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import ParticleBG from "../components/ParticleBG.astro";

---
<Layout title="Fee Schedule | Antarman">
    <Header />
    <ParticleBG />
    <main class="relative">
        <div class="absolute inset-0 bg-gradient-to-b from-purple-900/50 via-purple-800/30 to-transparent"></div>
        <div class="relative z-10">
            <div class="container mx-auto px-6 py-16 text-center md:py-20 lg:px-0 lg:py-28">
                <h1 class="text-5xl font-extrabold leading-tight text-white md:text-6xl lg:text-7xl animate-fade-in">
                    Fee Schedule
                </h1>
                <p class="mx-auto mt-6 max-w-3xl text-xl text-purple-100 md:text-2xl animate-slide-up">
                    Transparent pricing for quality mental healthcare. View our comprehensive fee structure and find the right care plan for you.
                </p>
            </div>
        </div>
    </main>

    
    <main class="container mx-auto p-4" id="main-content">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
            {[...Array(11)].map((_, index) => {
                const doctors = [
                    {name: "Dr Ravindra Agrawal", image: "../scraped-images/DrRavindraAgrawal.jpg", fees: {
                        "Consultation": {
                            "Standard": "Rs 1500",
                            "Extended": "Rs 3000",
                            "Hourly": "Rs 4500",
                            "Notes": "Standard consultation is 20 mins, Extended is 40 mins. The session cost remains same irrespective of in-person or online session"
                        },
                        "Therapy": {
                            "Standard": "Rs 2000",
                            "Notes": "A typical psychotherapy session lasts about 40 mins + 10 mins for making notes"
                        },
                        "Marriage Counselling Sessions": {
                            "Standard": "Rs 2000",
                            "Notes": "This includes a detailed psychiatric assessment, diagnosis, opinion BUT does not include the cost of any psychological assessment such as Rorsach, MMPI, 16PF etc which may be needed in order to arrive at a diagnosis. Referral to a psychologist for psychological assessment will be at the discretion of the psychiatrist"
                        },
                        "Medico Legal Report": {
                            "Notes": "To be communicated after obtaining details of the case. This includes a report to be provided to the court/ lawyer for the purpose of providing an expert opinion. The costing for the above report will depend on the work needed to be done in preparing the report"
                        },
                        "Home Visit": {
                            "Inside Panjim": "Rs 2500",
                            "Nearby Panjim City": "Rs 3500", 
                            "Notes": "Should the home visit be requested at places far-off, the fee needs to be discussed in advance with the visiting psychiatrist"
                        }
                    }},
                    {name: "Nitasha Borah", image: "../scraped-images/Nitasha  Borah.jpg", fees: {
                        "Consultation/Therapy": {
                            "Individual": "Rs 2000 per session (50 mins)",
                            "Couples": "Rs 2500 per session (1 hour 15 mins)",
                            "Group": "Rs 800 - 1000 (1 hour 30 mins)",
                            "Notes": "Please check booking, cancellation and rescheduling policy with therapist"
                        },
                        "IQ Assessment": {
                            "Standard": "Rs 5000",
                            "Notes": "Tests included: MISIC, VSMS"
                        },
                        "Learning Disability Assessment": {
                            "If IQ Test Has Been Done": "Rs 4500",
                            "Comprehensive SLD Assessment": "Rs 7500",
                            "Notes": "Tests used: NIMHANS Battery, Bender Gestalt Test, MISIC, NIMHANS SLD Battery"
                        },
                        "Assessment For Autism": {
                            "Standard": "Rs 4500",
                            "Notes": "Tests: INCLEN Indian Scale for Assessment of Autism"
                        },
                        "ADHD Assessment": {
                            "Standard": "Rs 4000",
                            "Notes": "1. Bender Gestalt Test 2. SNAP-IV 3. Vanderbilt Assessment Scales/ Conner's Scales"
                        },
                        "Assessment Of Emotional & Behavioural Disorders In Children": {
                            "Standard": "Rs 6000",
                            "Notes": "1. Bender Gestalt Test 2. Child Behavior Checklist/ Developmental Checklist 3. SNAP-IV 4. Strengths & Difficulties Questionnaire 5. Rorshach/House-Tree-Person/ Children's Apperception Test/ Kinetic Drawing Test"
                        },
                        "Diagnostic Profile For Adults": {
                            "Standard": "Rs 6000",
                            "Notes": "Bender Gestalt test, Rorsach using Exner compehensive system & MMPI"
                        },
                        "Personality Profile For Adults": {
                            "Standard": "Rs 6000",
                            "Notes": "16 PF Questionnaire & Rorsach using Exner comprehensive system"
                        },
                        "Others": {
                            "Note 1": "Other assessment tools and customized reports are also available for specific client needs. Please feel free to enquire.",
                            "Note 2": "The cost of assessment is calculated as cost of tests + session charges for time taken for assessment + interpretation and report writing charges."
                        }
                    }},
                    {name: "Tanushri Sharma", image: "../scraped-images/Tanushri Sharma.jpeg", fees: {
                        "Consultation/Therapy Session": {
                            "Standard": "Rs 1200",
                            "Notes": "A typical counselling/ therapy session lasts about 40 mins (+ 10 mins for writing notes)"
                        },
                        "Home/School Visit": {
                            "Standard": "Rs 2000"
                        },
                        "Assessment For Cognitive Impairment": {
                            "Standard": "Rs 1200"
                        }
                    }},
                    {name: "Dr Samina Khan", image: "../scraped-images/Dr Samina Khan.jpg", fees: {
                        "Consultation": {
                            "Standard": "Rs 800",
                            "Notes": "Typical session duration is 20 min"
                        }
                    }},
                    {name: "Shobhika Jaju", image: "../scraped-images/Shobhika Jaju.png", fees: {
                        "Consultation/Therapy": {
                            "Standard": "Rs 1000",
                            "Notes": "Typical Session duration is 40 mins + 10 mins for notes"
                        }
                    }},
                    {name: "Sharika Fernandes E Pereira", image: "../scraped-images/Sharika Fernandes E Pereira.jpeg", fees: {
                        "Consultation/Therapy Session": {
                            "Standard": "Rs 1200",
                            "Notes": "A typical counselling/ therapy session lasts about 40 mins (+ 10 mins for writing notes)"
                        }
                    }},
                    {name: "Dr Akshada Amonkar", image: "../scraped-images/Dr Akshada Amonkar.jpeg", fees: {
                        "Consultation": {
                            "Standard": "Rs 800",
                            "Notes": "Typical Session duration is 20 mins"
                        },
                        "Home Visit": {
                            "Standard": "Rs 2000",
                            "Notes": "In Panjim City"
                        }
                    }},
                    {name: "Sifti Bajwa", image: "../scraped-images/Sifti Bajwa.jpeg", fees: {
                        "Consultation/Therapy Session": {
                            "Standard": "Rs 1200",
                            "Notes": "A typical counselling/ therapy session lasts about 40 mins (+ 10 mins for writing notes)"
                        },
                        "Home/School Visit": {
                            "Standard": "Rs 2000"
                        }
                    }},
                    {name: "Preetha Mathew", image: "../scraped-images/Preetha Mathew.jpeg", fees: {
                        "Consultation/Therapy Session": {
                            "Standard": "Rs 1200",
                            "Notes": "A typical counselling/ therapy session lasts about 40 mins (+ 10 mins for writing notes)"
                        }
                    }},
                    {name: "Samir Walavalkar", image: "../scraped-images/SamirWalavalkar.jpeg", fees: {
                        "Consultation/Therapy Session": {
                            "Standard": "Rs 1200",
                            "Notes": "A typical counselling/ therapy session lasts about 40 mins (+ 10 mins for writing notes)"
                        },
                        "Home/School Visit": {
                            "Standard": "Rs 2000"
                        }
                    }},
                    {name: "Meischa Cholera", image: "../scraped-images/MeischaCholera.png", fees: {
                        "Consultation/Therapy Session": {
                            "Standard": "Rs 1200",
                            "Notes": "A typical counselling/ therapy session lasts about 40 mins (+ 10 mins for writing notes) The session cost remains same irrespective of in-person or online session"
                        },
                        "Home/School Visit": {
                            "Standard": "Rs 2000"
                        }
                    }}
                ];
                const doctor = doctors[index] || doctors[0]; // Fallback to first doctor if index exceeds array
              
                return (
                    <div class="group relative">
                        <div class="doctor-card bg-purple-900/30 rounded-2xl overflow-hidden backdrop-blur-sm transition-all duration-500 ease-in-out hover:shadow-lg hover:shadow-purple-500/20">
                            <button class="close-btn absolute top-2 right-2 bg-purple-500 text-white rounded-full w-8 h-8 flex items-center justify-center transition-all duration-500 ease-in-out z-50 hover:bg-purple-600 transform hover:scale-110 opacity-0">
                                ✕
                            </button>
                            <div class="relative w-full h-64 overflow-hidden">
                                <img 
                                    src={doctor.image} 
                                    alt={doctor.name} 
                                    class="w-full h-full object-cover object-center transition-transform duration-500 ease-in-out group-hover:scale-105"
                                    loading="lazy"
                                >
                                <div class="absolute inset-0 bg-gradient-to-t from-purple-950/40 to-transparent"></div>
                            </div>
                            <div class="p-4">
                                <h3 class="text-3xl font-bold text-white text-center mb-2 transition-colors duration-300 ease-in-out hover:text-purple-200">{doctor.name}</h3>
                                
                                <div class="fee-structure hidden opacity-0 transition-all duration-500 ease-in-out transform translate-y-4">
                                    <div class="text-gray-300 space-y-2 mt-4">
                                        {Object.entries(doctor.fees).map(([category, details]) => (
                                            <div class="fee-category">
                                                <button class="fee-toggle w-full flex justify-between items-center py-2 px-4 rounded-lg bg-purple-800/50 hover:bg-purple-700/50 transition-colors duration-300">
                                                    <span class="font-medium text-lg text-white">{category.charAt(0).toUpperCase() + category.slice(1)}</span>
                                                    <svg class="w-6 h-6 text-white transform transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                                                    </svg>
                                                </button>
                                                <div class="fee-details max-h-0 overflow-hidden transition-all duration-500 ease-in-out mt-2 ml-4 space-y-2">
                                                    {Object.entries(details).map(([type, value]) => (
                                                        <div class="flex justify-between items-start text-base">
                                                            <span class="text-white font-bold text-lg min-w-[100px]">{type.charAt(0).toUpperCase() + type.slice(1)}:</span>
                                                            <span class="text-white font-bold text-lg text-right flex-1 ml-4">{value}</span>
                                                        </div>
                                                    ))}
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                )
            })}
        </div>

        <div id="modal-overlay" class="fixed inset-0 bg-black/50 hidden backdrop-blur-sm transition-all duration-500 ease-in-out"></div>

        <style>
            .doctor-card {
                box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
                border: 1px solid rgba(255, 255, 255, 0.1);
                cursor: pointer;
                transform: translateY(0);
                transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            }
            
            .doctor-card:hover {
                transform: translateY(-5px);
            }
            
            .doctor-card.active {
                position: fixed;
                inset: 2rem;
                margin: auto;
                max-width: 600px;
                max-height: 80vh;
                z-index: 50;
                background: rgba(88, 28, 135, 0.95);
                transform: scale(1);
                transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
                overflow-y: auto;
                scrollbar-width: none; /* Firefox */
                -ms-overflow-style: none; /* IE and Edge */
            }

            .doctor-card.active::-webkit-scrollbar {
                display: none; /* Chrome, Safari and Opera */
            }

            .doctor-card.active .fee-structure {
                display: block;
                opacity: 1;
                transform: translateY(0);
            }

            .doctor-card.active .close-btn {
                opacity: 1;
            }

            #modal-overlay.show {
                display: block;
                opacity: 1;
            }

            .fee-toggle.active svg {
                transform: rotate(45deg);
            }

            .fee-details {
                max-height: 0;
                opacity: 0;
                transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            }

            .fee-details.active {
                max-height: 500px;
                opacity: 1;
            }

            @keyframes title {
                0% {
                    opacity: 0;
                    transform: translateY(20px);
                }
                100% {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            @keyframes fade-in {
                0% {
                    opacity: 0;
                }
                100% {
                    opacity: 1;
                }
            }

            @keyframes slideUp {
                from { transform: translateY(20px); opacity: 0; }
                to { transform: translateY(0); opacity: 1; }
            }

            .animate-slide-up {
                animation: slideUp 1s ease-out;
            }

            .animate-title {
                animation: title 0.6s ease-out forwards;
            }

            .animate-fade-in {
                animation: fade-in 0.6s ease-out forwards;
                animation-delay: 0.3s;
                opacity: 0;
            }
        </style>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const cards = document.querySelectorAll('.doctor-card');
                const closeBtns = document.querySelectorAll('.close-btn');
                const modalOverlay = document.getElementById('modal-overlay');

                const closeActiveCard = () => {
                    cards.forEach(card => {
                        (card as HTMLElement).style.transform = 'scale(0.95)';
                        setTimeout(() => {
                            card.classList.remove('active');
                            (card as HTMLElement).style.transform = '';
                        }, 100);
                    });
                    modalOverlay?.classList.remove('show');
                    document.body.style.overflow = 'auto';
                };

                cards.forEach(card => {
                    card.addEventListener('click', (e) => {
                        e.stopPropagation();
                        
                        if (!card.classList.contains('active')) {
                            closeActiveCard();
                            (card as HTMLElement).style.transform = 'scale(0.95)';
                            setTimeout(() => {
                                card.classList.add('active');
                                (card as HTMLElement).style.transform = 'scale(1)';
                                modalOverlay?.classList.add('show');
                                document.body.style.overflow = 'hidden';
                            }, 100);
                        }
                    });

                    // Add click handlers for fee toggles
                    card.querySelectorAll('.fee-toggle').forEach(toggle => {
                        toggle.addEventListener('click', (e) => {
                            e.stopPropagation();
                            
                            const details = toggle.nextElementSibling as HTMLElement;
                            const isExpanding = !toggle.classList.contains('active');
                            
                            // Close all other fee details in this card
                            const allToggles = card.querySelectorAll('.fee-toggle');
                            const allDetails = card.querySelectorAll('.fee-details');
                            
                            allToggles.forEach((t, index) => {
                                if (t !== toggle) {
                                    t.classList.remove('active');
                                    allDetails[index].classList.remove('active');
                                }
                            });

                            // Toggle the clicked fee details with animation
                            toggle.classList.toggle('active');
                            details.classList.toggle('active');
                        });
                    });
                });

                closeBtns.forEach(btn => {
                    btn.addEventListener('click', (e) => {
                        e.stopPropagation();
                        closeActiveCard();
                    });
                });

                modalOverlay?.addEventListener('click', () => {
                    closeActiveCard();
                });
            });
        </script>
    </main>
    <Footer />
</Layout>